---
Test
---
!***> definitions
!define REQUEST_1 { {{{Access-Request, ID 0
User-Name: anon
Filter-Id: fooBar}}} }

!define REQUEST_2 { {{{Access-Request, ID 0
User-Name: anon
Class: A:fooBar
Class: B:zooBar}}} }

!define REQUEST_3 { {{{Access-Request, ID 0
User-Name: anon
Filter-Id: fooBar}}} }

!define REQUEST_4 { {{{Access-Request, ID 0
User-Name: anon
Filter-Id: zooBar}}} }

!define REQUEST_5 { {{{Access-Request, ID 0
User-Name: anon}}} }

!define REQUEST_6 { {{{Access-Request, ID 0
User-Name: anon
Filter-Id: null}}} }

!define RESPONSE { {{{Access-Accept, ID 0}}} }
*!
!2 Set Attributes in RADIUS Authentication Fixture Table Mode
In table mode, attributes can be set or removed via columns. Default attributes can also be defined by header map.

!3 Column Definition
Single value attributes can be provided by column definition.

|ddt           :radius client fixture|${RADIUS_HOST}|${RADIUS_AUTH_PORT}|${RADIUS_SHARED_SECRET}|
|packet type   |User-Name            |Filter-Id     |request?           |response?              |
|Authentication|anon                 |fooBar        |${REQUEST_1}       |${RESPONSE}            |

To provide attributes as list, use the ''array push notation'' (attribute name followed by open and closed brackets - Attribute-Name[]).

|ddt           :radius client fixture|${RADIUS_HOST}|${RADIUS_AUTH_PORT}|${RADIUS_SHARED_SECRET} |
|packet type   |User-Name            |Class[]       |Class[]            |request?    |response?  |
|Authentication|anon                 |A:fooBar      |B:zooBar           |${REQUEST_2}|${RESPONSE}|

To update an attribute, just change value in lines.

|ddt           :radius client fixture|${RADIUS_HOST}|${RADIUS_AUTH_PORT}|${RADIUS_SHARED_SECRET}|
|packet type   |User-Name            |Filter-Id     |request?           |response?              |
|Authentication|anon                 |fooBar        |${REQUEST_3}       |${RESPONSE}            |
|Authentication|anon                 |zooBar        |${REQUEST_4}       |${RESPONSE}            |

To remove an attribute, set its value to ''null''.

|ddt           :radius client fixture|${RADIUS_HOST}|${RADIUS_AUTH_PORT}|${RADIUS_SHARED_SECRET}|
|packet type   |User-Name            |Filter-Id     |request?           |response?              |
|Authentication|anon                 |fooBar        |${REQUEST_3}       |${RESPONSE}            |
|Authentication|anon                 |null          |${REQUEST_5}       |${RESPONSE}            |
|Authentication|anon                 |zooBar        |${REQUEST_4}       |${RESPONSE}            |

The null label can be customized via map key ''nullLabel''.

|ddt           :radius client fixture|!{host:${RADIUS_HOST}, authPort:${RADIUS_AUTH_PORT}, sharedSecret:${RADIUS_SHARED_SECRET}, nullLabel:#null#}|
|packet type   |User-Name            |Filter-Id|request?    |response?                                                                            |
|Authentication|anon                 |fooBar   |${REQUEST_3}|${RESPONSE}                                                                          |
|Authentication|anon                 |#null#   |${REQUEST_5}|${RESPONSE}                                                                          |
|Authentication|anon                 |null     |${REQUEST_6}|${RESPONSE}                                                                          |

!3 Default Attribute Value Definition
Default attributes can be set via header map. Each table row will inherit these attributes.

|ddt      :radius client fixture|!{host:${RADIUS_HOST}, authPort:${RADIUS_AUTH_PORT}, sharedSecret:${RADIUS_SHARED_SECRET}, packetType:Authentication}|
|User-Name|Filter-Id            |request?    |response?                                                                                               |
|anon     |fooBar               |${REQUEST_1}|${RESPONSE}                                                                                             |

The previous request can be also defined as the following table:

|ddt      :radius client fixture|!{host:${RADIUS_HOST}, authPort:${RADIUS_AUTH_PORT}, sharedSecret:${RADIUS_SHARED_SECRET}, packetType:Authentication, User-Name:anon}|
|Filter-Id|request?             |response?                                                                                                                            |
|fooBar   |${REQUEST_1}         |${RESPONSE}                                                                                                                          |
