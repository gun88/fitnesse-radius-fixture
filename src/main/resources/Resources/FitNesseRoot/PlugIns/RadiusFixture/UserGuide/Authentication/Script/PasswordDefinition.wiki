---
Test
---
!2 Password Definition in RADIUS Authentication Request
In this page are collected Access Request examples supported by RADIUS Server Mock. Access Request examples  explained here are:
 * Anonymous User (no-password)
 * Plain Text
 * PAP Protocol
 * CHAP Protocol

!3 Anonymous User
RADIUS Server Mock supports Anonymous users. Username should be provided via the ''User-Name'' attribute.

|script               |radius client fixture              |
|load radius auth endpoint                                |
|set request attribute|User-Name          |with value|anon|
|check                |send authentication|Access-Accept  |

!3 Plain Text
RADIUS Server Mock supports Plain Text passwords. Username should be provided via the ''User-Name'' attribute and password via the ''User-Password'' attribute.

|script               |radius client fixture                       |
|load radius auth endpoint                                         |
|set request attribute|User-Name          |with value|user001      |
|set request attribute|User-Password      |with value|password001  |
|check                |send authentication|Access-Accept           |
|set request attribute|User-Name          |with value|user001      |
|set request attribute|User-Password      |with value|wrongPassword|
|check                |send authentication|Access-Reject           |
|set request attribute|User-Name          |with value|wrongUser    |
|set request attribute|User-Password      |with value|password001  |
|check                |send authentication|Access-Reject           |

!3 PAP Protocol
RADIUS Server Mock supports PAP Protocol passwords. Username should be provided via the ''User-Name'' attribute and password via the ''User-Password'' attribute.
PAP passwords are built against ''request authenticator'' and ''shared secret''. When not defined, the ''request authenticator'' is randomly created so, to set access credentials this way, a fixed ''request authenticator'' need to be set.

|script                   |radius client fixture                                            |
|load radius auth endpoint                                                                  |
|set request authenticator|0x000102030405060708900a0b0c0d0e0f                               |
|set request attribute    |User-Name          |with value|user001                           |
|set request attribute    |User-Password      |with value|0xa4bdb6ae9d8c1819c2152fc47bb1965d|
|check                    |send authentication|Access-Accept                                |
|set request attribute    |User-Name          |with value|user001                           |
|set request attribute    |User-Password      |with value|0xa0000000000000000000000000000001|
|check                    |send authentication|Access-Reject                                |
|set request attribute    |User-Name          |with value|wrongUser                         |
|set request attribute    |User-Password      |with value|0xa4bdb6ae9d8c1819c2152fc47bb1965d|
|check                    |send authentication|Access-Reject                                |

To use randomly created ''request authenticator'' and plain text paswords, just use the utility method ''set auth pap password''.
|script               |radius client fixture                   |
|load radius auth endpoint                                     |
|set request attribute|User-Name          |with value|user001  |
|set auth pap password|password001                             |
|check                |send authentication|Access-Accept       |
|set request attribute|User-Name          |with value|user001  |
|set auth pap password|wrongPassword                           |
|check                |send authentication|Access-Reject       |
|set request attribute|User-Name          |with value|wrongUser|
|set auth pap password|password001                             |
|check                |send authentication|Access-Reject       |

!3 PAP Protocol
RADIUS Server Mock supports CHAP Protocol passwords. Username should be provided via the ''User-Name'' attribute, password via the ''CHAP-Password'' attribute and challange via the ''CHAP-Challange'' attribute.
CHAP passwords are built against ''CHAP-Challenge'' attribute. When not defined, the ''CHAP-Challenge'' attribute is randomly created so, to set access credentials this way, a fixed ''CHAP-Challange'' attribute need to be set.

|script               |radius client fixture                                              |
|load radius auth endpoint                                                                |
|set request attribute|User-Name          |with value|user001                             |
|set request attribute|CHAP-Password      |with value|0x02f9dd92e2c4bb53c0a262159fe5d2e4b0|
|set request attribute|CHAP-Challenge     |with value|0x79e33e7957fa907665ad630318cefbbd  |
|check                |send authentication|Access-Accept                                  |
|set request attribute|User-Name          |with value|wrongUser                           |
|set request attribute|CHAP-Password      |with value|0x02f9dd92e2c4bb53c0a262159fe5d2e4b0|
|set request attribute|CHAP-Challenge     |with value|0x79e33e7957fa907665ad630318cefbbd  |
|check                |send authentication|Access-Reject                                  |
|set request attribute|User-Name          |with value|user001                             |
|set request attribute|CHAP-Password      |with value|0x0000000000000000000000000000000001|
|set request attribute|CHAP-Challenge     |with value|0x79e33e7957fa907665ad630318cefbbd  |
|check                |send authentication|Access-Reject                                  |
|set request attribute|User-Name          |with value|user001                             |
|set request attribute|CHAP-Password      |with value|0x02f9dd92e2c4bb53c0a262159fe5d2e4b0|
|set request attribute|CHAP-Challenge     |with value|0x00000000000000000000000000000001  |
|check                |send authentication|Access-Reject                                  |

To use randomly created ''CHAP-Challange'' attribute and plain text paswords, just use the utility method ''set auth chap password''.
|script                |radius client fixture                   |
|load radius auth endpoint                                      |
|set request attribute |User-Name          |with value|user001  |
|set auth chap password|password001                             |
|check                 |send authentication|Access-Accept       |
|set request attribute |User-Name          |with value|user001  |
|set auth chap password|wrongPassword                           |
|check                 |send authentication|Access-Reject       |
|set request attribute |User-Name          |with value|wrongUser|
|set auth chap password|password001                             |
|check                 |send authentication|Access-Reject       |

